// <auto-generated />
using System;
using KolosAPBD.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KolosAPBD.Migrations
{
    [DbContext(typeof(ApbdContext))]
    [Migration("20240614105741_createDB1")]
    partial class createDB1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KolosAPBD.Model.Backpack", b =>
                {
                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("Backpacks");

                    b.HasData(
                        new
                        {
                            CharacterID = 1,
                            ItemID = 1,
                            Amount = 5
                        });
                });

            modelBuilder.Entity("KolosAPBD.Model.Character", b =>
                {
                    b.Property<int>("CharacterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterID"));

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int");

                    b.HasKey("CharacterID");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterID = 1,
                            CurrentWeight = 80,
                            FirstName = "Anakin",
                            LastName = "Skywalker",
                            MaxWeight = 120
                        });
                });

            modelBuilder.Entity("KolosAPBD.Model.CharacterTitle", b =>
                {
                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("TitleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CharacterID", "TitleID");

                    b.HasIndex("TitleID");

                    b.ToTable("Character_Titles");

                    b.HasData(
                        new
                        {
                            CharacterID = 1,
                            TitleID = 1,
                            AcquiredAt = new DateTime(2024, 6, 14, 12, 57, 40, 987, DateTimeKind.Local).AddTicks(79)
                        });
                });

            modelBuilder.Entity("KolosAPBD.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Miecz swietlny",
                            Weight = 10
                        });
                });

            modelBuilder.Entity("KolosAPBD.Model.Title", b =>
                {
                    b.Property<int>("TitleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TitleID");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            TitleID = 1,
                            Name = "Jedi"
                        });
                });

            modelBuilder.Entity("KolosAPBD.Model.Backpack", b =>
                {
                    b.HasOne("KolosAPBD.Model.Character", "Character")
                        .WithMany("Backpacks")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KolosAPBD.Model.Item", "Item")
                        .WithMany("Backpacks")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("KolosAPBD.Model.CharacterTitle", b =>
                {
                    b.HasOne("KolosAPBD.Model.Character", "Character")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KolosAPBD.Model.Title", "Title")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("TitleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("KolosAPBD.Model.Character", b =>
                {
                    b.Navigation("Backpacks");

                    b.Navigation("CharacterTitles");
                });

            modelBuilder.Entity("KolosAPBD.Model.Item", b =>
                {
                    b.Navigation("Backpacks");
                });

            modelBuilder.Entity("KolosAPBD.Model.Title", b =>
                {
                    b.Navigation("CharacterTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
